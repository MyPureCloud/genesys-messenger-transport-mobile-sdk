buildscript {
    ext {
        deploymentProperties = new Properties()
        oktaProperties = new Properties()
        if (System.env.JENKINS_HOME != null) {
            // when executing on jenkins, use environment variable-injected credentials
            deploymentProperties["deploymentId"] = System.env.DEPLOYMENT_ID
            deploymentProperties["deploymentDomain"] = System.env.DEPLOYMENT_DOMAIN
            //Okta variables
            oktaProperties["oktaDomain"] = System.env.OKTA_DOMAIN
            oktaProperties["clientId"] = System.env.CLIENT_ID
            oktaProperties["signInRedirectUri"] = System.env.SIGN_IN_REDIRECT_URI
            oktaProperties["signOutRedirectUri"] = System.env.SIGN_OUT_REDIRECT_URI
            oktaProperties["oktaState"] = System.env.OKTA_STATE
            oktaProperties["codeChallenge"] = System.env.CODE_CHALLENGE
            oktaProperties["codeChallengeMethod"] = System.env.CODE_CHALLENGE_METHOD
            oktaProperties["codeVerifier"] = System.env.CODE_VERIFIER
        } else {
            // when executing elsewhere (dev laptops, etc), use the secure.properties file on disk
            deploymentPropertiesFile = new File(rootDir.absolutePath + "/deployment.properties")
            if (deploymentPropertiesFile.exists()) {
                deploymentProperties.load(deploymentPropertiesFile.newReader())
            } else {
                throw new GradleException("Deployment id and domain must be specified in either environmental variables for Jenkins or ${rootDir.absolutePath}/deployment.properties locally.")
            }
            oktaPropertiesFile = new File(rootDir.absolutePath + "/okta.properties")
            if (oktaPropertiesFile.exists()) {
                oktaProperties.load(oktaPropertiesFile.newReader())
            } else {
                logger.warn("okta.properties does not exist in the path and will be ignored.")
                 throw new GradleException("Okta configuration must be specified in ${rootDir.absolutePath}/okta.properties locally.")
            }
        }
    }
}

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.4.32'
    id 'org.jmailen.kotlinter'
}

android {
    compileSdkVersion 34
    buildToolsVersion "34.0.0"

    android.buildFeatures.buildConfig true
    defaultConfig {
        applicationId "com.genesys.cloud.webmessaging.androidcomposeprototype"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "DEPLOYMENT_ID", '"' + deploymentProperties["deploymentId"] + '"'
        buildConfigField "String", "DEPLOYMENT_DOMAIN", '"' + deploymentProperties["deploymentDomain"] + '"'
        // OKTA
        buildConfigField "String", "OKTA_DOMAIN", '"' + oktaProperties["oktaDomain"] + '"'
        buildConfigField "String", "CLIENT_ID", '"' + oktaProperties["clientId"] + '"'
        buildConfigField "String", "SIGN_IN_REDIRECT_URI", '"' + oktaProperties["signInRedirectUri"] + '"'
        buildConfigField "String", "SIGN_OUT_REDIRECT_URI", '"' + oktaProperties["signOutRedirectUri"] + '"'
        buildConfigField "String", "OKTA_STATE", '"' + oktaProperties["oktaState"] + '"'
        buildConfigField "String", 'CODE_CHALLENGE', "\"${oktaProperties.getProperty('codeChallenge')}\""
        buildConfigField "String", 'CODE_CHALLENGE_METHOD', "\"${oktaProperties.getProperty('codeChallengeMethod')}\""
        buildConfigField "String", 'CODE_VERIFIER', "\"${oktaProperties.getProperty('codeVerifier')}\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.5.10"
    }
    sourceSets {
        main {
            assets {
                srcDirs 'src/main/assets', 'src/androidTest/assets'
            }
        }
    }
    namespace 'com.genesys.cloud.messenger.androidcomposeprototype'
}

dependencies {
    ext.fragment_version = '1.6.2'
    ext.activity_compose_version = '1.8.2'
    ext.lifecycle_viewmodel_compose_version = '2.7.0'
    ext.compose_version = '1.6.3'

    implementation(project(':transport'))

    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.3'
    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    // Compose
    implementation "androidx.compose.ui:ui:$compose_version"
    // Material Design
    implementation "androidx.compose.material:material:$compose_version"
    // Tooling support
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    // Foundation
    implementation "androidx.compose.foundation:foundation:$compose_version"
    // Integration with ViewModels
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_viewmodel_compose_version"
    // Integration with activities
    implementation "androidx.activity:activity-compose:$activity_compose_version"
    // Chrome Custom Tabs
    implementation 'androidx.browser:browser:1.8.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'com.jaredrummler:android-device-names:2.1.1'
    androidTestImplementation 'org.awaitility:awaitility-kotlin:4.2.0'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.3.0'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation('com.fasterxml.jackson.module:jackson-module-kotlin:2.16.1')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    configurations.all {
        resolutionStrategy.dependencySubstitution {
            substitute(module("org.hamcrest:hamcrest-library:1.3")).using(module("junit:junit:4.13.2"))
            substitute(module("org.hamcrest:hamcrest-core:1.3")).using(module("junit:junit:4.13.2"))
        }
    }
}

repositories {
    mavenCentral()
}
